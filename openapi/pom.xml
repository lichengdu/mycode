<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.masget</groupId>
	<artifactId>openapi</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>openapi</name>
	<url>http://maven.apache.org</url>

	<!-- 私有仓库 -->
	<repositories>
		<repository>
			<id>nexus</id>
			<name>Team Nexus Repository</name>
			<url>http://maven.masget.com:7078/nexus/content/groups/public</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>nexus</id>
			<name>Team Nexus Repository</name>
			<url>http://maven.masget.com:7078/nexus/content/groups/public</url>
		</pluginRepository>
	</pluginRepositories>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.encoding>UTF-8</maven.compiler.encoding>
		<encoding>UTF-8</encoding>
		<skipTests>true</skipTests>
		<java_version>1.7</java_version>
		<java_source_version>1.7</java_source_version>
		<java_target_version>1.7</java_target_version>
		<maven_compiler_plugin>2.3.2</maven_compiler_plugin>
		<plexus_compiler_javac>1.8.1</plexus_compiler_javac>
		<maven_shade_plugin>1.7.1</maven_shade_plugin>
		<maven_resources_plugin>2.6</maven_resources_plugin>
		<spring_version>3.2.9.RELEASE</spring_version>
		<!-- 发布环境 -->
		<deployment.env>develop</deployment.env>
	</properties>

	<profiles>
		<!-- 33.11润泓(核心云)测试环境 -->
		<profile>
			<id>debug</id>
			<properties>
				<deployment.env>debug</deployment.env>
			</properties>
		</profile>
		<!-- 33.5润泓(核心云)共公开发环境 -->
		<profile>
			<id>develop</id>
			<properties>
				<deployment.env>develop</deployment.env>
			</properties>
		</profile>
		<!-- 润泓(核心云)镜像环境 -->
		<profile>
			<id>mirror</id>
			<properties>
				<deployment.env>mirror</deployment.env>
			</properties>
		</profile>
		<!-- 润泓(核心云)生产环境 -->
		<profile>
			<id>release</id>
			<properties>
				<deployment.env>release</deployment.env>
			</properties>
		</profile>
	</profiles>

	<dependencies>
		<!-- spring包开�? -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring_version}</version>
		</dependency>
		<!-- spring包结结束 -->
		<!-- dubbox包开�? -->
		<dependency>
			<groupId>com.masget</groupId>
			<artifactId>dubbox</artifactId>
			<version>2.8.4</version>
		</dependency>
		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.15.0-GA</version>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty</artifactId>
			<version>3.7.0.Final</version>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-all</artifactId>
			<version>4.0.26.Final</version>
			<scope>compile</scope>
		</dependency>
		<!-- dubbox结束 -->
		<!-- zookeeper包开�? -->
		<dependency>
			<groupId>org.apache.zookeeper</groupId>
			<artifactId>zookeeper</artifactId>
			<version>3.4.6</version>
		</dependency>
		<dependency>
			<groupId>com.github.sgroschupf</groupId>
			<artifactId>zkclient</artifactId>
			<version>0.1</version>
		</dependency>
		<!-- zookeeper包结�? -->
		<!-- google的json包开�? -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.2.2</version>
		</dependency>
		<!-- google的json结束 -->
		<!-- JSON工具包开�? -->
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.8.3</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>net.sf.ezmorph</groupId>
			<artifactId>ezmorph</artifactId>
			<version>1.0.6</version>
		</dependency>
		<dependency>
			<groupId>net.sf.json-lib</groupId>
			<artifactId>json-lib</artifactId>
			<version>2.4</version>
			<classifier>jdk15</classifier>
		</dependency>
		<!-- JSON工具包结�? -->
		<!-- openapiinterface接口包开�? -->
		<dependency>
			<groupId>com.masget</groupId>
			<artifactId>openapi_webinterface_java</artifactId>
			<version>1.3.8</version>
		</dependency>
		<!-- openapiinterface接口包结�? -->

	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.xml</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>debug/*</exclude>
					<exclude>develop/*</exclude>
					<exclude>mirror/*</exclude>
					<exclude>release/*</exclude>
				</excludes>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven_compiler_plugin}</version>
				<configuration>
					<source>${java_source_version}</source>
					<target>${java_target_version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven_resources_plugin}</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<!-- 在default生命周期的 validate阶段就执行resources插件的copy-resources目标 -->
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<!-- 指定resources插件处理资源文件到哪个目录下 -->
							<!-- <outputDirectory>${project.build.outputDirectory}</outputDirectory> -->
							<!-- 也可以用下面这样的方式（指定相对url的方式指定outputDirectory） -->
							<outputDirectory>target/classes</outputDirectory>
							<!-- 待处理的资源定义 -->
							<resources>
								<resource>
									<!-- 指定resources插件处理哪个目录下的资源文件 -->
									<directory>src/main/resources/${deployment.env}</directory>
									<!-- 指定不需要处理的资源 <excludes> <exclude>WEB-INF/*.*</exclude> </excludes> -->
									<!-- 是否对待处理的资源开启过滤模式 (resources插件的copy-resources目标也有资源过滤的功能，这里配置的 
										这个功能的效果跟<build><resources><resource>下配置的资源过滤是一样的，只不过可能执行的阶段不一样， 这里执行的阶段是插件指定的validate阶段，<build><resources><resource>下的配置将是在resources插件的resources目标执行时起作用（在process-resources阶段）) -->
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
						<inherited></inherited>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>${maven_shade_plugin}</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/spring.handlers</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/spring.schemas</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>com.masget.openapi.HttpServer</mainClass>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
